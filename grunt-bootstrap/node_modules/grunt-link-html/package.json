{
  "name": "grunt-link-html",
  "description": "Insert css and Javascript links into html file",
  "version": "0.1.2",
  "homepage": "https://github.com/pythonandchips/grunt-link-html",
  "author": {
    "name": "Colin Gemmell",
    "email": "pythonandchips@gmail.com",
    "url": "blog.pythonandchips.net"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/pythonandchips/grunt-link-html.git"
  },
  "bugs": {
    "url": "https://github.com/pythonandchips/grunt-link-html/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/pythonandchips/grunt-link-html/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-link-html\n\n> Insert css and Javascript links into html file\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-link-html --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-link-html');\n```\n\n## The \"link_html\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `link_html` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  link_html: {\n    your_target: {\n      // Target-specific file lists and/or options go here.\n      jsFiles: ['path/to/js/files.js']\n      cssFiles: ['path/to/css/files.css']\n      targetHtml: ['path/to/html/files.html']\n      options: {\n        cwd: 'public'\n      },\n    },\n  },\n})\n```\n\nThen in your html pages add the derectives on where to place css and javascript.\n\n```html\n<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <!-- begin:css -->\n    <!-- end:css -->\n  </head>\n  <body>\n    <!-- begin:js -->\n    <!-- end:js -->\n  </body>\n</html>\n```\n\nAfter running the task it will modify the html file with links and script tags inserted between the directives.\n\n\n```html\n<!doctype html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <!-- begin:css -->\n    <link rel=\"stylesheet\" type=\"text/css\" herf=\"reset.css\">\n    <link rel=\"stylesheet\" type=\"text/css\" herf=\"awesome_styling.css\">\n    <!-- end:css -->\n  </head>\n  <body>\n    <!-- begin:js -->\n    <script src=\"jquery.js\"></script>\n    <script src=\"awesome_stuff.js\"></script>\n    <!-- end:js -->\n  </body>\n</html>\n```\n\n### Options\n\n#### options.cwd\nType: `String`\nDefault value: `.`\n\nPath to where to reference all files from (maybe be used for a CDN later).\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n0.1.0 - Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-link-html@0.1.2",
  "_from": "grunt-link-html@~0.1.2"
}
